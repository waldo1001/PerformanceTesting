// DeadLocks - Last ones
traces
// | where customDimensions has "customername"
| where timestamp >= ago(3d) 
| where customDimensions has 'RT0028'
| where customDimensions.eventId == 'RT0028'
| where isnotempty(customDimensions.aadTenantId) // filter away signal from Docker sandboxes
| where customDimensions.alObjectId != '0' 
| where isnotempty(customDimensions.alObjectId)
| extend TenantId = strcat(customDimensions.aadTenantId)
    , ObjectType = tostring(customDimensions.alObjectType)
    , ObjectId = tostring(customDimensions.alObjectId)
    , ObjectName = tostring(customDimensions.alObjectName)
    , sqlStatement = tostring(customDimensions.sqlStatement)
    , companyName = tostring(customDimensions.companyName)        
    , numberOfJoins = countof(tostring(customDimensions.sqlStatement), "JOIN") 
    , userId = user_Id
| extend operationType = case(
    sqlStatement startswith "UPDATE", "UPDATE"
    , sqlStatement startswith "DELETE", "DELETE"
    , sqlStatement startswith "BeginTransaction", "BEGIN_TRANS"
    , sqlStatement matches regex "INSERT INTO", "INSERT"
    , sqlStatement startswith "SELECT", "SELECT"
    , sqlStatement matches regex "IF EXISTS \\(SELECT (.*)\\) SELECT", "SELECT'"
    , sqlStatement has "SELECT NEXT VALUE FOR", "SELECT_SEQUENCE_VALUE"
    , sqlStatement has "SELECT @@SPID", "SELECT_SPID"
    , sqlStatement matches regex "(.*)WITH", "SELECT"
    , sqlStatement startswith "CREATE TABLE", "CREATE_TABLE"
    , sqlStatement startswith "ALTER TABLE", "ALTER_TABLE"
    , sqlStatement startswith "exec sp_rename", "RENAME_TABLE" 
    , sqlStatement matches regex "(.*)DROP TABLE", "DROP_TABLE"
    , sqlStatement startswith "SET LOCK_TIMEOUT", "SET_LOCK_TIMEOUT"
    , sqlStatement has "sp_getapplock", "GET_APP_LOCK"
    , "UNKNOWN"
    ) 
| parse kind=regex sqlStatement with selectPart: string "FROM \"SQLDATABASE\".dbo.\"CURRENTCOMPANY\\$" tablename: string "\\$" space: string
| extend splitStacktrace = split(customDimensions.alStackTrace, "\n") 
| extend lengthStacktrace = array_length(splitStacktrace)
| extend
    LockingObject = splitStacktrace[0],
    SourceProcess = splitStacktrace[lengthStacktrace - 1]
| project
    timestamp,
    //        TenantId,
    userId,
    //        companyName,
    ObjectType,
    ObjectId,
    ObjectName,
    numberOfJoins,
    LockingObject,
    SourceProcess,
    operationType,
    sqlStatement,
    splitStacktrace,
    customDimensions
| order by timestamp desc 
