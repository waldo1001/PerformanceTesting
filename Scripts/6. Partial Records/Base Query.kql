//Joins/Columns - base query

let MinNoOfColumns = 50;
let MinNoOfJoins = 0;
traces
// | where customDimensions has "customername"
| where timestamp >= ago(30d) 
| where isnotempty(customDimensions.sqlStatement)  //needs to have a SQL statement
| where isnotempty(customDimensions.alStackTrace)  //needs to have code, so - somebody - can change it
| extend numberOfJoins = countof(tostring(customDimensions.sqlStatement), "JOIN")  //Count the joins
| where not(customDimensions.alObjectType in ("Page")) //Not interested in pages
| where customDimensions.sqlStatement startswith "SELECT"
| where customDimensions.extensionPublisher == 'iFacto Business Solutions NV' //only my own extensions
| parse kind=regex tostring(customDimensions.sqlStatement) with selectPart: string "FROM" rest: string
| extend numberOfColumnsSelected = countof(selectPart, ",") + 1 //Count columns
    , eventId = tostring(customDimensions.eventId)
    , TenantId = strcat(customDimensions.aadTenantId)
    , userId = user_Id
    , ObjectType = tostring(customDimensions.alObjectType)
    , ObjectId = tostring(customDimensions.alObjectId)
    , ObjectName = tostring(customDimensions.alObjectName)
    , sqlStatement = tostring(customDimensions.sqlStatement)
    , companyName = tostring(customDimensions.companyName)
    , clientType = tostring(customDimensions.clientType)
    , StackTrace = tostring(customDimensions.alStackTrace)
    , executionTime = customDimensions.executionTime
    , executionTimeInMS = toreal(totimespan(customDimensions.executionTime)) / 10000
    , extensionId = customDimensions.extensionId
    , extensionName = customDimensions.extensionName
    , extensionPublisher = customDimensions.extensionPublisher
| extend extensionIdsFromJOIN = tostring(extract_all("JOIN \"SQLDATABASE\"\\.dbo\\.\"CURRENTCOMPANY\\$.+?\\$(\\S+?)\"", sqlStatement))
| extend tablename = tostring(extract_all("FROM \"SQLDATABASE\"\\.dbo\\.\"CURRENTCOMPANY(\\$.+?)\\$\\S+?\"", sqlStatement)[0])
| project 
    // TenantId,
    extensionPublisher,
    // extensionName,
    // companyName,
    numberOfColumnsSelected,
    numberOfJoins,
    executionTimeInMS,
    ObjectType,
    ObjectId,
    ObjectName,
    StackTrace,
    eventId,
    message,
    clientType,
    tablename,
    sqlStatement,
    extensionIdsFromJOIN
| where numberOfColumnsSelected > MinNoOfColumns
    and numberOfJoins > MinNoOfJoins
| order by numberOfJoins desc 
| take 1000
